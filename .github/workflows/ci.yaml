name: CI

on:
  push:
  pull_request:
  workflow_call:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - id: cache-dependencies-pip
      name: Cache dependencies (pip)
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - id: cache-dependencies-poetry
      name: Cache dependencies (poetry)
      uses: actions/cache@v2.1.7
      with:
        path: ${{ github.workspace }}/.venv
        key: ${{ runner.os }}-dependencies-${{ hashFiles('**/poetry.lock') }}
        restore-keys: ${{ runner.os }}-dependencies-
    - name: Install dependencies
      if: steps.cache-dependencies-poetry.cache-hit != 'true' || steps.cache-dependencies-pip.cache-hit != 'true'
      run: |
        python -m pip install -U pip poetry
        poetry --version
        poetry check --no-interaction
        poetry config virtualenvs.in-project true
        poetry install --no-interaction
    - name: Test
      run: |
        poetry run pytest -v

  lint_typecheck:
    name: Lint & typecheck
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Lint and type-checking
      uses: pre-commit/action@v3.0.0
